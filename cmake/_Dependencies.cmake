#
# cmake/_Dependencies.cmake is generated by `mulle-sde`. Edits will be lost.
#
if( MULLE_TRACE_INCLUDE)
   message( STATUS "# Include \"${CMAKE_CURRENT_LIST_FILE}\"" )
endif()

if( NOT PLUGIN1_HEADER)
   find_file( PLUGIN1_HEADER NAMES plugin1/plugin1.h plugin1.h)
   message( STATUS "PLUGIN1_HEADER is ${PLUGIN1_HEADER}")

   set( ALL_LOAD_HEADER_ONLY_LIBRARIES
      ${PLUGIN1_HEADER}
      ${ALL_LOAD_HEADER_ONLY_LIBRARIES}
      CACHE INTERNAL "need to cache this"
   )
   if( PLUGIN1_HEADER)
      # search for DependenciesAndLibraries.cmake to include
      get_filename_component( _TMP_PLUGIN1_ROOT "${PLUGIN1_HEADER}" DIRECTORY)
      get_filename_component( _TMP_PLUGIN1_NAME "${_TMP_PLUGIN1_ROOT}" NAME)
      get_filename_component( _TMP_PLUGIN1_ROOT "${_TMP_PLUGIN1_ROOT}" DIRECTORY)
      get_filename_component( _TMP_PLUGIN1_ROOT "${_TMP_PLUGIN1_ROOT}" DIRECTORY)
   else()
      message( FATAL_ERROR "PLUGIN1_HEADER was not found")
   endif()
endif()



if( NOT PLUGIN2_HEADER)
   find_file( PLUGIN2_HEADER NAMES plugin2/plugin2.h plugin2.h)
   message( STATUS "PLUGIN2_HEADER is ${PLUGIN2_HEADER}")

   set( ALL_LOAD_HEADER_ONLY_LIBRARIES
      ${PLUGIN2_HEADER}
      ${ALL_LOAD_HEADER_ONLY_LIBRARIES}
      CACHE INTERNAL "need to cache this"
   )
   if( PLUGIN2_HEADER)
      # search for DependenciesAndLibraries.cmake to include
      get_filename_component( _TMP_PLUGIN2_ROOT "${PLUGIN2_HEADER}" DIRECTORY)
      get_filename_component( _TMP_PLUGIN2_NAME "${_TMP_PLUGIN2_ROOT}" NAME)
      get_filename_component( _TMP_PLUGIN2_ROOT "${_TMP_PLUGIN2_ROOT}" DIRECTORY)
      get_filename_component( _TMP_PLUGIN2_ROOT "${_TMP_PLUGIN2_ROOT}" DIRECTORY)
   else()
      message( FATAL_ERROR "PLUGIN2_HEADER was not found")
   endif()
endif()
